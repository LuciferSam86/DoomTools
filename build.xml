<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<!-- ====================================================================== 
     Doom Struct Build File    
     Matt Tropiano                                                                
     ====================================================================== -->
<project name="build" default="compile">

	<description>Doom Struct</description>

	<property file="build.properties" />

	<!-- Dependencies -->
	<property name="dev.base" value=".." />
	<property name="S" value="${path.separator}" />
	<property name="shell.dir" value="shell" />
	<property name="dist.dir" value="dist" />

	<!-- Project Libs -->
	<property name="doom.lib.version" value="2.9.1" />
	<property name="doom.tag" value="${doom.lib.version}-RELEASE" />
	<property name="doom.project" value="doomstruct-${doom.lib.version}" />	
	<property name="doom.jar" value="${doom.project}.jar" />
	<property name="doom.jar.src" value="${doom.project}-sources.jar" />
	<property name="rookscript.lib.version" value="1.7.2" />
	<property name="rookscript.tag" value="${rookscript.lib.version}-RELEASE" />
	<property name="rookscript.project" value="blackrook-rookscript-${rookscript.lib.version}" />	
	<property name="rookscript.jar" value="${rookscript.project}.jar" />
	<property name="rookscript.jar.src" value="${rookscript.project}-sources.jar" />

	<!-- Project Info -->
	<property name="project.archive" value="doomtools" />
	<property name="project.javadoc.title" value="DoomTools" />
	<property name="project.classpath" value="${dev.base}/${doom.jar}${S}${dev.base}/${rookscript.jar}"/>
	<property name="project.compiler.bootclasspath" value="" />
	<property name="project.testclass" value=""/>
	<property name="project.testclass.main" value=""/>
	<property name="project.javadoc.packages" value="
		"
	/>
	
	<import file="build-shell.xml" />
	<import file="build-dependencies.xml" />
	<import file="build-import.xml" />
	
	<!-- Versions -->
	<property name="wadmerge.version" value="${build.version}" />
	<property name="wswantbls.version" value="${build.version}" />
	<property name="wadtex.version" value="${build.version}" />
	<property name="wtexscan.version" value="${build.version}" />
	<property name="wtexport.version" value="${build.version}" />
	<property name="wadscript.version" value="${build.version}" />

	
	<!-- Filenames -->
	<property name="build.versions.dir" value="${build.dir}/versions" />
	<property name="zip.dist.filename" value="${project.archive}-${build.version}.zip" />
	<property name="tar.dist.filename" value="${project.archive}-${build.version}.tar.gz" />

	<target name="clean.dist">
		<delete dir="${dist.dir}" includeemptydirs="true" casesensitive="false" /> 
	</target>

	<target name="init.dist" depends="clean.dist">
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="clean.versions">
		<delete dir="${build.versions.dir}" includeemptydirs="true" casesensitive="false" /> 
	</target>

	<target name="init.versions" depends="clean.versions">
		<mkdir dir="${build.versions.dir}" />
		<echo file="${build.versions.dir}/doom.version" message="${doom.lib.version}" />
		<echo file="${build.versions.dir}/rookscript.version" message="${rookscript.lib.version}" />
		<echo file="${build.versions.dir}/wadmerge.version" message="${wadmerge.version}" />
		<echo file="${build.versions.dir}/wswantbls.version" message="${wswantbls.version}" />
		<echo file="${build.versions.dir}/wadtex.version" message="${wadtex.version}" />
		<echo file="${build.versions.dir}/wtexscan.version" message="${wtexscan.version}" />
		<echo file="${build.versions.dir}/wtexport.version" message="${wtexport.version}" />
		<echo file="${build.versions.dir}/wadscript.version" message="${wadscript.version}" />
	</target>

	<target name="javadoc" depends="init.docs" description="Builds the documentation.">
        <javadoc access="protected" 
        	additionalparam="-J-Xmx512m  " author="true" 
        	classpath="${project.classpath}${path.separator}${bin.dir}" 
        	doctitle="${project.javadoc.title}" 
        	sourcepath="${src.dir}" 
        	packagenames="${project.javadoc.packages}"
        	destdir="${docs.dir}" 
        	splitindex="true" 
        	use="true" 
        	version="true" 
        	nodeprecated="false" 
        	nodeprecatedlist="false" 
        	noindex="false" 
        	nonavbar="false" 
        	notree="false"
    		>
            <link href="https://docs.oracle.com/en/java/javase/11/docs/api/"/>
        </javadoc>
    </target>	

	<target name="jar.one" depends="compile, init.versions">
		<jar destfile="${jar.dir}/${jar.filename}">
			<zipgroupfileset file="${dependencies.dir}/${doom.jar}"/>
			<zipgroupfileset file="${dependencies.dir}/${rookscript.jar}"/>
		</jar>
		<jar basedir="${bin.dir}" destfile="${jar.dir}/${jar.filename}" update="true" />
		<jar destfile="${jar.dir}/${jar.filename}" update="true">
			<zipfileset dir="${build.dir}/versions" prefix="net/mtrop/doom/tools/" />
		</jar>
	</target>

	<target name="dependency.doom">
		<github-dl repository="MTrop/DoomStruct" tag="${doom.tag}" file="${doom.jar}" dest="${dependencies.dir}" />
		<github-dl repository="MTrop/DoomStruct" tag="${doom.tag}" file="${doom.jar.src}" dest="${dependencies.dir}" />
	</target>
	
	<target name="dependency.rookscript">
		<github-dl repository="BlackRookSoftware/RookScript" tag="${rookscript.tag}" file="${rookscript.jar}" dest="${dependencies.dir}" />
		<github-dl repository="BlackRookSoftware/RookScript" tag="${rookscript.tag}" file="${rookscript.jar.src}" dest="${dependencies.dir}" />
	</target>
	
	<target name="dependencies" depends="init.dependencies, dependency.doom, dependency.rookscript, dependency.properties" description="Downloads and compiles the dependencies.">
	</target>

	<target name="scripts" description="Creates application shell scripts.">
		<!-- WadMerge -->
		<shell-cmd  name="wadmerge"  todir="${build.dir}/shell/cmd"  jarname="jar\${jar.filename}" mainclass="net.mtrop.doom.tools.WadMergeMain" />
		<shell-bash name="wadmerge"  todir="${build.dir}/shell/bash" jarname="jar/${jar.filename}" mainclass="net.mtrop.doom.tools.WadMergeMain" />
		<!-- WSWANTBL -->
		<shell-cmd  name="wswantbl" todir="${build.dir}/shell/cmd"  jarname="jar\${jar.filename}" mainclass="net.mtrop.doom.tools.WSwAnTablesMain" />
		<shell-bash name="wswantbl" todir="${build.dir}/shell/bash" jarname="jar/${jar.filename}" mainclass="net.mtrop.doom.tools.WSwAnTablesMain" />
		<!-- WADTex -->
		<shell-cmd  name="wadtex" todir="${build.dir}/shell/cmd"  jarname="jar\${jar.filename}" mainclass="net.mtrop.doom.tools.WADTexMain" />
		<shell-bash name="wadtex" todir="${build.dir}/shell/bash" jarname="jar/${jar.filename}" mainclass="net.mtrop.doom.tools.WADTexMain" />
		<!-- WTexScan -->
		<shell-cmd  name="wtexscan" todir="${build.dir}/shell/cmd"  jarname="jar\${jar.filename}" mainclass="net.mtrop.doom.tools.WTexScanMain" />
		<shell-bash name="wtexscan" todir="${build.dir}/shell/bash" jarname="jar/${jar.filename}" mainclass="net.mtrop.doom.tools.WTexScanMain" />
		<!-- WTexport -->
		<shell-cmd  name="wtexport" todir="${build.dir}/shell/cmd"  jarname="jar\${jar.filename}" mainclass="net.mtrop.doom.tools.WTExportMain" />
		<shell-bash name="wtexport" todir="${build.dir}/shell/bash" jarname="jar/${jar.filename}" mainclass="net.mtrop.doom.tools.WTExportMain" />
		<!-- WadScript -->
		<shell-cmd  name="wadscript" todir="${build.dir}/shell/cmd"  jarname="jar\${jar.filename}" mainclass="net.mtrop.doom.tools.WadScriptMain" />
		<shell-bash name="wadscript" todir="${build.dir}/shell/bash" jarname="jar/${jar.filename}" mainclass="net.mtrop.doom.tools.WadScriptMain" />
	</target>

	<target name="dist.cmd" depends="init.jar, jar.one, scripts, init.dist">
		<zip destfile="${dist.dir}/${zip.dist.filename}" compress="true">
			<zipfileset file="${jar.dir}/${jar.filename}" prefix="jar" />
			<zipfileset dir="${build.dir}/shell/cmd" />
			<zipfileset refid="fileset.documents" prefix="docs" />
			<zipfileset dir="docs" prefix="docs" />
		</zip>
	</target>

	<target name="dist.bash" depends="init.jar, jar.one, scripts, init.dist">
		<tar destfile="${dist.dir}/${tar.dist.filename}" compression="gzip">
			<zipfileset file="${jar.dir}/${jar.filename}" prefix="jar" />
			<tarfileset dir="${build.dir}/shell/bash" filemode="755" />
			<tarfileset refid="fileset.documents" prefix="docs" />
			<tarfileset dir="docs" prefix="docs" />
		</tar>
	</target>

	<target name="dist" depends="dist.bash, dist.cmd" description="Zips together the application and shell scripts.">
	</target>

	<target name="deploy.cmd" if="deploy.dir" depends="dist.cmd" description="Deploys the CMD distribution to a directory, CLEANING THE DIRECTORY FIRST. USE CAUTION.">
		<delete dir="${deploy.dir}" failonerror="false" />
		<mkdir dir="${deploy.dir}" />
		<unzip src="${dist.dir}/${zip.dist.filename}" dest="${deploy.dir}" />
	</target>

	<target name="deploy.bash" if="deploy.dir" depends="dist.bash" description="Deploys the Bash distribution to a directory, CLEANING THE DIRECTORY FIRST. USE CAUTION.">
		<delete dir="${deploy.dir}" failonerror="false" />
		<mkdir dir="${deploy.dir}" />
		<unzip src="${dist.dir}/${tar.dist.filename}" dest="${deploy.dir}" />
	</target>
	
</project>