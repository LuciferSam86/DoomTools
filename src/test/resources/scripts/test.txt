
check function wadtest(wad, outwad)
{
	outwad->wadimport(wad, wad->map::entries("map29"));
	println(outwad->wadentries());
	outwad
		->wadadd("ENTRY1")
		->wadadd("ENTRY2", "Hello, Wad file!")
		->wadadd("ENTRY3", bufnew(512))
		->wadadd("ENTRY4", file("build.xml"))
	;
	println(outwad->wadentries());
		
	outwad
		->wadremove(outwad->wadentryindex("NODES"))
		->waddelete(outwad->wadentryindex("SSECTORS"))
		->wadremove(outwad->wadentryindex("REJECT"))
		->waddelete(outwad->wadentryindex("SEGS"))
		->wadremove(outwad->wadentryindex("BLOCKMAP"))
	;
	println(outwad->wadentries());
}


check entry main(args)
{
	println(iswad("H:\\Doom\\Iwads\\DOOM2.WAD"));
	wad = wadfile("H:\\Doom\\Iwads\\DOOM2.WAD");
	println(wad->wadinfo());
	each (i, e : wad->wadentries())
		println(i + ": " + e);
		
	println(wad->wadentry("vertexes", "map01"));
	println(wad->wadentry("vertexes", "map99"));
	println(wad->map::headers());
	println(wad->map::entries("map01"));
	println(wad->map::entrycount("map01"));

	println(wad->waddata("things", "map01"));
	println(wad->waddata({"name": "THINGS", "offset": 54224, "size": 690}));
	
	datain = wad->waddatastream("things", "map01");
	println(datain);
	close(datain);
	
	// test file
	outwad = wadfilecreate("junk.wad");
	wadtest(wad, outwad);
	close(outwad);
	filedelete("junk.wad");
	
	// test buffer
	wadtest(wad, wadbuffer());
	
	close(wad);
}