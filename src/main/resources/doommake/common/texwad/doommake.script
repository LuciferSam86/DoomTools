/* ------------------------------------------------------------------------ */

#define SRC_DIR_TEXTUREWADS "/wads/textures"

/**
 * Scans the project for available texture WADs.
 */
function scanTextureWADList() {
	return filelist(getSourceDirectory() + SRC_DIR_TEXTUREWADS, false, REGEX_WADFILES);
}

/* ------------------------------------------------------------------------ */

/**
 * Extracts textures from the project texture WADs using the maps.
 * Creates maptex WAD.
 */
check function doMapTextures() {
	
	initBuild();
	
	sourceDir = getSourceDirectory() + SRC_DIR_TEXTUREWADS;
	verifydirs(sourceDir);

	hash = directoryHasChanged(sourceDir);
	if (hash === null) {
		if (!wasBuilt("maps")) {
			println("Maps were not built and texture WADs were not changed. Skipping map texture rebuild.");
			return;
		}
	}
	
	// Only do if maps were compiled.
	if (!fileexists(getBuildDirectory() + "/" + getMapsWad())) {
		println("No maps in `" + (getBuildDirectory() + "/" + getMapsWad()) + "`. Skipping texture extraction.");
		return;
	}

	textureWadFiles = scanTextureWadList();
	if (empty(textureWadFiles)) {
		println("WARNING: No texture WADs found in: " + textureWadDir + ". Skipping texture extraction step.");
		return;
	}
	
	baseIwadPath = getIwad();
	if (empty(baseIwadPath))
		return error("NoIWAD", "An IWAD for this project was not set in properties: " + PROP_IWADPATH);

	outputWad = getBuildDirectory() + "/" + getMapTexWad();

	extractUsedMapTextures(
		baseIwadPath, 
		[getBuildDirectory() + "/" + getMapsWad()], 
		textureWadFiles, 
		outputWad
	);
	
	setBuilt("maptextures");
}


