/* ------------------------------------------------------------------------ */

#define SRC_DIR_TEXTUREWADS "/wads/textures"

/**
 * Scans the project for available texture WADs.
 */
function scanTextureWADList() {
	return filelist(getSourceDirectory() + SRC_DIR_TEXTUREWADS, false, REGEX_WADFILES);
}

/* ------------------------------------------------------------------------ */

/**
 * Extracts textures from the project texture WADs using the maps.
 * Creates maptex WAD.
 */
check function doMapTextures() {
	
	initBuild();
	
	baseIwadPath = getIwad();
	if (empty(baseIwadPath))
		return error("NoIWAD", "An IWAD for this project was not set in properties: " + PROP_IWADPATH);

	outWad = getBuildDirectory() + "/" + getMapTexWad();
	outMapsWad = getBuildDirectory() + "/" + getMapsWad();

	sourceDir = getSourceDirectory() + SRC_DIR_TEXTUREWADS;
	verifydirs(sourceDir);

	// Only do if maps were compiled.
	if (!fileExists(outMapsWad)) {
		println("[Skipped] No maps in `" + outMapsWad + "`. Skipping texture extraction.");
		return;
	}	

	if(fileExists(outWad)) {
		hash = directoryHasChanged(sourceDir);
		if (hash === null) {
			if (!wasBuilt("maps")) {
				println("[Skipped] Maps were not built and texture WADs were not changed. Skipping map texture rebuild.");
				return;
			}
		}
	} else {
		hash = directoryHasChanged(sourceDir);
	}
	
	println("Extracting map textures...");

	textureWadFiles = scanTextureWadList();
	if (empty(textureWadFiles)) {
		println("[Skipped] WARNING: No texture WADs found in: " + textureWadDir + ". Skipping texture extraction step.");
		return;
	}
	
	extractUsedMapTextures(
		baseIwadPath, 
		[outMapsWad], 
		textureWadFiles, 
		outWad
	);
	
	setBuilt("maptextures");
}


