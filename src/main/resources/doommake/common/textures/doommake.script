/* ------------------------------------------------------------------------ */

#define PROP_TEXWAD         "doommake.file.textures"
#define DEFAULT_TEXWAD      "textures.wad"
#define SRC_DIR_TEXTURES    "src/textures"
#define MERGESCRIPT_TEXTURE "scripts/merge-textures.txt"

/**
 * Return the output textures WAD.
 */
function getTextureWad() {
	return prop(PROP_TEXWAD, DEFAULT_TEXWAD); 
}

/* ------------------------------------------------------------------------ */

/**
 * Builds the texture WAD.  
 * Creates texture WAD.
 */
check function doTextures() {
	initBuild();
	verifydirs(SRC_DIR_TEXTURES + "/flats");
	verifydirs(SRC_DIR_TEXTURES + "/patches");
	wadmerge(file(MERGESCRIPT_TEXTURE), [
		getBuildDirectory(), 
		getTextureWad()
	]);
}

function exportTextureLump(iwadPath, textureFilePath) {
	if (empty(iwadPath))
		return error("ToolError", "IWAD file not specified.");
	if (empty(textureFilePath))
		return error("ToolError", "Texture listing output file path not specified.");
	if (tool::wadtex({
        sourcefile: file(textureFilePath), 
        wadfile: file(iwadPath), 
        exportmode: true,
        verbose: false 
	})) return error("ToolError", "WADTex threw an error.");
}


/**
 * Rebuilds the texture WAD.  
 * Creates texture listings if they do not exist.
 */
check function doRebuildTextures() {
	initBuild();
	
	baseIwadPath = getIwad();
	if (empty(baseIwadPath))
		return error("NoIWAD", "An IWAD for this project was not set in properties: " + PROP_IWADPATH);
	
	if (fileexists(SRC_DIR_TEXTURES + "/texture1.txt"))
		println(SRC_DIR_TEXTURES + "/texture1.txt exists. Skipping rebuild.");
	else
		exportTextureLump(baseIwadPath, SRC_DIR_TEXTURES + "/texture1.txt");

	if (fileexists(SRC_DIR_TEXTURES + "/texture2.txt"))
		println(SRC_DIR_TEXTURES + "/texture2.txt exists. Skipping rebuild.");
	else
		exportTextureLump(baseIwadPath, SRC_DIR_TEXTURES + "/texture2.txt");
}


