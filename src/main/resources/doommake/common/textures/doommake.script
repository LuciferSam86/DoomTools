/* ------------------------------------------------------------------------ */

#define PROP_TEXWAD         "doommake.file.textures"
#define DEFAULT_TEXWAD      "textures.wad"

#define SCRIPT_TEXTURE      "scripts/merge-textures.txt"

#define DIR_SRC_TEXTURES    "src/textures"

/* ------------------------------------------------------------------------ */

/**
 * Return the output textures WAD.
 */
function getTextureWad() {
	return prop(PROP_TEXWAD, DEFAULT_TEXWAD); 
}

/**
 * Return the texture merge script.
 */
function getTexturesScript() {
	return prop(PROP_TEXTURESCRIPT, DEFAULT_TEXTURESCRIPT); 
}

/**
 * Reduces the textures to what are used in the maps. 
 * Creates maptex WAD.
 */
check function reduceTextures() {
	baseIwadPath = getIwad();
	
	if (empty(baseIwadPath))
		return error("NoIWAD", "An IWAD for this project was not set in properties: " + PROP_IWADPATH);

	extractUsedMapTextures(
		baseIwadPath, 
		[getBuildDirectory() + "/" + getMapsWad()], 
		[getBuildDirectory() + "/" + getTextureWad()], 
		getBuildDirectory() + "/" + getMapTexWad()
	);	
}

/* ------------------------------------------------------------------------ */

/**
 * Builds the texture WAD.  
 * Creates texture WAD.
 */
check function doTextures() {
	initBuild();
	verifydirs(DIR_SRC_TEXTURES + "/flats");
	verifydirs(DIR_SRC_TEXTURES + "/patches");
	
	if (tool::wadmerge({
		inputfile: file(getTexturesScript()),
		args: [
			getBuildDirectory(), 
			getTextureWad()
		]
	})) return error("ToolError", "WadMerge threw an error.");
}


/*****************************************************************************
 * TARGET: textures
 *****************************************************************************
 * Reads the texture assets and merges them into a WAD.
 * doommake textures
 ****************************************************************************/
check entry textures(args) {
	doTextures();
}

