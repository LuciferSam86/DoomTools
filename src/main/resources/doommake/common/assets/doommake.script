/* ------------------------------------------------------------------------ */

#define SRC_DIR_ASSETS     "/assets" 
#define MERGESCRIPT_ASSETS "scripts/merge-assets.txt"

/**
 * Cleans up the created asset WAD.
 */
check function cleanUpAssetWAD(wadpath) {
	wf = wadfile(wadpath);
	
	// Remove the sprite namespace if empty.
	sx = wadentryindex(wf, "SS_START");
	sy = wadentryindex(wf, "SS_END");
	if (sx !== null && (sy - sx === 1)) {
		wf->waddelete(wf->wadentryindex("SS_START"));
		wf->waddelete(wf->wadentryindex("SS_END"));
	}
	
	close(wf);
}

/**
 * Calls the merge script for merging assets.
 * Creates assets WAD.
 */
check function doAssets() {
	
	initBuild();

	outWad = getBuildDirectory() + "/" + getAssetsWAD();

	sourceDir = getSourceDirectory() + SRC_DIR_ASSETS;
	verifydirs(sourceDir + "/_global");
	verifydirs(sourceDir + "/graphics");
	verifydirs(sourceDir + "/music");
	verifydirs(sourceDir + "/sounds");
	verifydirs(sourceDir + "/sprites");
		
	if (fileExists(outWad)) {
		hash = directoryHasChanged(sourceDir);
		if (hash === null) {
			println("[Skipped] Assets directory (" + sourceDir + ") up to date.");
			return;
		}
	} else {
		hash = directoryHasChanged(sourceDir);
	}
	
	wadmerge(file(MERGESCRIPT_ASSETS), [
		getBuildDirectory(),
		getSourceDirectory(),
		getAssetsWAD()
	]);
	cleanUpAssetWAD(outWad);
	
	storeDirectoryChanged(sourceDir, hash);
	setBuilt("assets");
}


