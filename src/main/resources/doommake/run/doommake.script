/* ------------------------------------------------------------------------ */

#define PROP_RUN_EXE            "doommake.run.exe"
#define PROP_RUN_EXE_WORK       "doommake.run.exe.workdir"
#define PROP_RUN_SWITCH_IWAD    "doommake.run.switch.iwad"
#define DEFAULT_RUN_SWITCH_IWAD "-iwad"
#define PROP_RUN_SWITCH_FILE    "doommake.run.switch.file"
#define DEFAULT_RUN_SWITCH_FILE "-file"
#define PROP_RUN_SWITCH_DEH     "doommake.run.switch.deh"
#define DEFAULT_RUN_SWITCH_DEH  "-deh"

/**
 * Calls a port to run this project.
 * portType: If specified, then this looks for the properties that end with ".porttype".
 * wadList: List of WAD files to add.
 * dehFile: DEH file to add.
 */
check function doRun(portType, wadList, dehFile, args) {

	iwadPath = getIwad();
	if (empty(iwadPath))
		return error("NoIWAD", "An IWAD for this project was not set in properties: " + PROP_IWADPATH);

	portType = empty(portType) ? "" : "." + portType;

	exepath =    prop(PROP_RUN_EXE + portType);
	exeworkdir = prop(PROP_RUN_EXE_WORK + portType) ?: fileparent(exepath);
	iwadSwitch = prop(PROP_RUN_SWITCH_IWAD + portType, DEFAULT_RUN_SWITCH_IWAD);
	fileSwitch = prop(PROP_RUN_SWITCH_FILE + portType, DEFAULT_RUN_SWITCH_FILE);
	dehSwitch =  prop(PROP_RUN_SWITCH_DEH + portType, DEFAULT_RUN_SWITCH_DEH);
	
	if (empty(exepath))
		return error("NoEXE", "Executable not specified. Requires a property to be set: " + PROP_RUN_EXE + portType);
	
	if (!fileexists(exepath))
		return error("NoEXE", "Executable could not be found: " + exepath);
	if (!fileexists(exeworkdir))
		return error("NoEXE", "Working directory for executable not found: " + exeworkdir);

	if (empty(iwadSwitch))
		return error("RunError", "IWAD switch not specified. Requires a property to be set: " + PROP_RUN_SWITCH_IWAD + portType);
	if (empty(fileSwitch))
		return error("RunError", "FILE switch not specified. Requires a property to be set: " + PROP_RUN_SWITCH_FILE + portType);
	if (empty(dehSwitch))
		return error("RunError", "DEH switch not specified. Requires a property to be set: " + PROP_RUN_SWITCH_DEH + portType);

	arguments = [];

	arguments->listadd(iwadSwitch);
	arguments->listadd(iwadPath->filecanonpath());

	if (!empty(wadList)) {
		arguments->listadd(fileSwitch);
		each (w : wadList)
			arguments->listadd(w->filecanonpath());
	}

	if (!empty(dehFile)) {
		arguments->listadd(dehSwitch);
		arguments->listadd(dehFile->filecanonpath());
	}
	
	if (args) each (a : args) {
		arguments->listadd(a);
	}
	
	return execresult(exec(
		exepath, arguments, envvars(), exeworkdir, stdout(), stderr(), stdin()
	));
}

/* ------------------------------------------------------------------------ */

check function runCommon(args)
{
	// Must use native separator for args passed to program.
	fs = prop("file.separator", "/");
	
	patchPath     = getBuildDirectory() + fs + getPatchFile();
	assetsWadPath = getBuildDirectory() + fs + getAssetsWAD();
	mapsWadPath   = getBuildDirectory() + fs + getMapsWAD();
	texWadPath    = getBuildDirectory() + fs + getTextureWAD();
	mapTexWadPath = getBuildDirectory() + fs + getMapTextureWAD();

	wadList = [];

	if (fileexists(assetsWadPath))
		wadlist->listAdd(assetsWadPath);
	if (fileexists(mapsWadPath))
		wadlist->listAdd(mapsWadPath);

	// Run will add either add the reduced texture set from compiled maps 
	// or the compiled textures WAD. If you want to explicitly use one or the
	// other, edit the following lines:

	if (fileexists(mapTexWadPath))
		wadlist->listAdd(mapTexWadPath);
	else if (fileexists(texWadPath))
		wadlist->listAdd(texWadPath);
	
	// Set DEH file here, if any.
	dehFile = fileexists(patchPath) ? file(patchPath) : null;

	if (length(args) > 1) {
		argrest = args->sublist(1);
	}

	return doRun(args[0], wadList, dehFile, argrest);
}

